#include<ArduinoSTL.h>
using namespace std;

const int fsensor = 0;
int BLED = 8;
int GLED = 9;
int RLED = 10;

int number;

void setup()
{

}

void loop()
{
  cout << "enter a number between 1 and 9: " << endl;
  cin >> number;
  setRGB_LED(number);
}

void setRGB_LED (int number)
{
  switch (number)
  {
    case 1:
      analogWrite(BLED, 100);
      digitalWrite(GLED, LOW);
      digitalWrite(RLED, LOW);
       break;

      case 2:
        analogWrite(BLED, 180);
        digitalWrite(GLED, LOW);
        digitalWrite(RLED, LOW);
        break;

      case 3:
        analogWrite(BLED, 180);
        digitalWrite(GLED, LOW);
        digitalWrite(RLED, LOW);
        break;

      case 4:
        digitalWrite(BLED, LOW);
        digitalWrite(RLED, LOW);
        analogWrite(GLED, 100);
        break;

      case 5:
        digitalWrite(BLED, LOW);
        digitalWrite(RLED, LOW);
        analogWrite(GLED, 180);
        break;

      case 6:
        digitalWrite(BLED, LOW);
        digitalWrite(RLED, LOW);
        analogWrite(GLED, 255);
        break;

      case 7:
        digitalWrite(BLED, LOW);
        digitalWrite(RLED, LOW);
        analogWrite(GLED, 100);
        break;

      case 8:
        digitalWrite(BLED, LOW);
        digitalWrite(RLED, LOW);
        digitalWrite(GLED, LOW);
    }
  }
  
  
  
  #include<ArduinoSTL.h>
using namespace std;

const int fsensor = 0;
int BLED = 8;
int GLED = 9;
int RLED = 10;

int number;

void setup()
{

}

void loop()
{
  cout << "enter a number between 1 and 9: " << endl;
  cin >> number;
  number=sensorRead(force);
  setRGB_LED(number);
}

void sensorRead(force)
{
  force=analogRead(fsensor);
  
  }
  
void setRGB_LED (int number)
{
  switch (number)
  {
    case 1:
      analogWrite(BLED, 100);
      digitalWrite(GLED, LOW);
      digitalWrite(RLED, LOW);
       break;

      case 2:
        analogWrite(BLED, 180);
        digitalWrite(GLED, LOW);
        digitalWrite(RLED, LOW);
        break;

      case 3:
        analogWrite(BLED, 180);
        digitalWrite(GLED, LOW);
        digitalWrite(RLED, LOW);
        break;

      case 4:
        digitalWrite(BLED, LOW);
        digitalWrite(RLED, LOW);
        analogWrite(GLED, 100);
        break;

      case 5:
        digitalWrite(BLED, LOW);
        digitalWrite(RLED, LOW);
        analogWrite(GLED, 180);
        break;

      case 6:
        digitalWrite(BLED, LOW);
        digitalWrite(RLED, LOW);
        analogWrite(GLED, 255);
        break;

      case 7:
        digitalWrite(BLED, LOW);
        digitalWrite(RLED, LOW);
        analogWrite(GLED, 100);
        break;

      case 8:
        digitalWrite(BLED, LOW);
        digitalWrite(RLED, LOW);
        digitalWrite(GLED, LOW);
    }
  }
  
  
  
  Part 3:
  #include<ArduinoSTL.h>
using namespace std;

int led[] = {2, 3, 4, 5, 6, 7, 8};
int button = 12;
int currentButton = 0;
int lastButton = 0;
int timer = 200;
int number;

void setup()
{
  for (int i = 0; i < 7; i += 1)
  {
    pinMode(led[i], OUTPUT);
  }
  pinMode(button, INPUT_PULLUP);
}

void loop()
{
  currentButton = analogRead(button);
  if (lastButton != currentButton)
  {
    if (currentButton == HIGH)
    {
      number = random(0, 7);

      if (number == 1)
      {
        digitalWrite(led[0], HIGH);
        delay(timer);
      }
      else if (number == 2)
      {
        digitalWrite(led[0], HIGH);
        digitalWrite(led[1], HIGH);
        delay(timer);
      }
      else if (number == 3)
      {
        digitalWrite(led[0], HIGH);
        digitalWrite(led[1], HIGH);
        digitalWrite(led[2], HIGH);
        delay(timer);
      }
      else if (number == 4)
      {
        digitalWrite(led[0], HIGH);
        digitalWrite(led[2], HIGH);
        digitalWrite(led[3], HIGH);
        digitalWrite(led[5], HIGH);
        delay(timer);
      }
      else if (number == 5)
      {
        digitalWrite(led[0], HIGH);
        digitalWrite(led[2], HIGH);
        digitalWrite(led[3], HIGH);
        digitalWrite(led[5], HIGH);
        digitalWrite(led[6], HIGH);
        delay(timer);
      }
      else
      {
        digitalWrite(led[0], HIGH);
        digitalWrite(led[1], HIGH);
        digitalWrite(led[2], HIGH);
        digitalWrite(led[4], HIGH);
        digitalWrite(led[3], HIGH);
        digitalWrite(led[5], HIGH);
        delay(timer);

      }
    }
    else
    {
      // do nothing
    }
    delay(50);
  }
  lastButton = currentButton;
}
